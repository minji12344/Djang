- 템플릿 시스템
템플릿 시스템은 웹 어플리케이션에서 동적으로 HTML을 생성하기 위한 도구
Django의 MTV 아키텍처에서 View와 Model 사이의 데이터 전달과 HTML 랜더링을 담당한다.

+ 템플릿 파일 : .html 확장자를 가진 텍스트 파일
템플릿 파일을 프론트 엔드 디자인과 백엔드 데이터를 결합하여 최종 HTML 문서를 생성하는데 사용된다.

+ 변수 : ({{}}) 2개 안에 변수를 넣어 해당 변수 값을 출력한다.

+ 필터 : 중괄호 안에 파이프(|)로 연결하여 변수나 함수의 결과값을 변환하거나 조작한다.
{{name|lower}} -> name을 소문자로 필터링

+ 태그 : 중괄호와 ({% %}) 사이에 위치한다.
{% for %} : 반복문 처리
{% if %} : 조건문 처리
{% url %} : url 생성
{% csrf_token %} : 장고에서 POST 요청을 할 때, CSRF(Cross-Site Request Forgery) 공격을 방지하기 위해 사용한다.
<from method="post">
    {% csrf_token %} # 요청이 올바른지 검증
    <input type="">
</from>

{% with %} : 임시 변수를 정의하여 템플릿 내부에서 재사용할 수 있다.
{% with total = num*price %}
    <p> 총 금액 : {{total}} </p>
{% with %}

{% load %} : 특정 템플릿 라이브러리나 필터를 로드하는데 사용된다.
CSS, JavaScript 및 이미지와 같은 정적 파일들은 장고 내부에서 설정되어야 한다.
{% load static %} : 정적 파일 탐색기 로딩
<img src = "{% static 'images/example.jpg' %}" alt = "Example Image">  : 이미지 파일 링크

{% block %} : 상속용 블록 정의

+ 상속 : 상속 기능을 사용하여 공유되는 레이아웃과 코드 조각들을 재사용할 수 있다.
{% extends %} : 부모 템플릿 지정
{% block %} : 자식 템플릿에서 오버라이드 가능한 블록 정의

+ 주석 : {# #} 

+ 컨텍스트 : 컨트롤로(View)가 전달하는 데이터는 컨텍스트(context)라고 하고 딕셔너리 형태로 전달한다.
context ={
    'name' : 'kim',
    'skill' : 'django',
} 
return render(request, 'index.html', context)


